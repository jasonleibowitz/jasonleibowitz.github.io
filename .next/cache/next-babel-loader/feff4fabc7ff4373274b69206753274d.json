{"ast":null,"code":"var _jsxFileName = \"/Users/jasonleibowitz/Code/side-projects/jasonleibowitz.github.io/pages/posts/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  _s();\n\n  var post = _ref.post,\n      preview = _ref.preview;\n  var router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, router.isFallback ? __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"Loading...\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }, post.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }, \"Author: \", post.author.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }\n  }, \"Date: \", post.date), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  })));\n}\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/jasonleibowitz/Code/side-projects/jasonleibowitz.github.io/pages/posts/[slug].tsx"],"names":["useRouter","ErrorPage","Post","post","preview","router","isFallback","slug","title","author","name","date","__html","content"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAIA,eAAe,SAASC,IAAT,OAAiC;AAAA;;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAC/C,MAAMC,MAAM,GAAGL,SAAS,EAAxB;;AACA,MAAI,CAACK,MAAM,CAACC,UAAR,IAAsB,EAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,IAAP,CAA1B,EAAuC;AACtC,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,MAAM,CAACC,UAAP,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACK,KAAV,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYL,IAAI,CAACM,MAAL,CAAYC,IAAxB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,IAAI,CAACQ,IAAf,CAHD,EAIC;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAET,IAAI,CAACU;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAJF,CADD;AAcA;;GApBuBX,I;UACRF,S;;;KADQE,I","sourcesContent":["import { useRouter } from 'next/router';\nimport ErrorPage from 'next/error'; \nimport { getPostBySlug, getAllPosts } from 'lib/api';\nimport markdownToHtml from 'lib/markdownToHtml';\n\nexport default function Post({ post, preview }) {\n\tconst router = useRouter();\n\tif (!router.isFallback && !post?.slug) {\n\t\treturn <ErrorPage statusCode={404} />\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{router.isFallback ? (\n\t\t\t\t<h1>Loading...</h1>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{post.title}</h1>\n\t\t\t\t\t<p>Author: {post.author.name}</p>\n\t\t\t\t\t<p>Date: {post.date}</p>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.content }} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport async function getStaticProps({ params }) {\n\tconst post = getPostBySlug(params.slug, [\n\t\t'title',\n\t\t'date',\n\t\t'slug',\n\t\t'author',\n\t\t'content',\n\t\t'ogImage',\n\t\t'coverImage'\n\t])\n\n\tconst content = await markdownToHtml(post.content || '');\n\n\treturn {\n\t\tprops: {\n\t\t\tpost: {\n\t\t\t\t...post,\n\t\t\t\tcontent,\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport async function getStaticPaths() {\n\tconst posts = getAllPosts(['slug'])\n\n\treturn {\n\t\tpaths: posts.map(post => {\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\tslug: post.slug\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tfallback: false\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}