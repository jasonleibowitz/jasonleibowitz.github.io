{"ast":null,"code":"var _jsxFileName = \"/Users/jasonleibowitz/Code/side-projects/jasonleibowitz.github.io/pages/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport { getPostBySlug, getAllPosts } from 'lib/api';\nimport markdownToHtml from 'lib/markdownToHtml';\nexport default function Post({\n  className,\n  post,\n  preview\n}) {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, router.isFallback ? __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"Loading...\") : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }, post.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }, \"Author: \", post.author.name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }\n  }, \"Date: \", post.date), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  })));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/jasonleibowitz/Code/side-projects/jasonleibowitz.github.io/pages/posts/[slug].tsx"],"names":["useRouter","ErrorPage","getPostBySlug","getAllPosts","markdownToHtml","Post","className","post","preview","router","isFallback","slug","title","author","name","date","__html","content","getStaticProps","params","props","getStaticPaths","posts","paths","map","fallback"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,SAA3C;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAd,EAA4C;AAC1D,QAAMC,MAAM,GAAGT,SAAS,EAAxB;;AACA,MAAI,CAACS,MAAM,CAACC,UAAR,IAAsB,EAACH,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,IAAP,CAA1B,EAAuC;AACtC,WAAO,MAAC,SAAD;AAAW,MAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SACC;AAAK,IAAA,SAAS,EAAEL,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,MAAM,CAACC,UAAP,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,GAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACK,KAAV,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYL,IAAI,CAACM,MAAL,CAAYC,IAAxB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUP,IAAI,CAACQ,IAAf,CAHD,EAIC;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAET,IAAI,CAACU;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,CAJF,CADD;AAcA;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAChD,QAAMZ,IAAI,GAAGL,aAAa,CAACiB,MAAM,CAACR,IAAR,EAAc,CACvC,OADuC,EAEvC,MAFuC,EAGvC,MAHuC,EAIvC,QAJuC,EAKvC,SALuC,EAMvC,SANuC,EAOvC,YAPuC,CAAd,CAA1B;AAUA,QAAMM,OAAO,GAAG,MAAMb,cAAc,CAACG,IAAI,CAACU,OAAL,IAAgB,EAAjB,CAApC;AAEA,SAAO;AACNG,IAAAA,KAAK,EAAE;AACNb,MAAAA,IAAI,kCACAA,IADA;AAEHU,QAAAA;AAFG;AADE;AADD,GAAP;AAQA;AAED,OAAO,eAAeI,cAAf,GAAgC;AACtC,QAAMC,KAAK,GAAGnB,WAAW,CAAC,CAAC,MAAD,CAAD,CAAzB;AAEA,SAAO;AACNoB,IAAAA,KAAK,EAAED,KAAK,CAACE,GAAN,CAAUjB,IAAI,IAAI;AACxB,aAAO;AACNY,QAAAA,MAAM,EAAE;AACPR,UAAAA,IAAI,EAAEJ,IAAI,CAACI;AADJ;AADF,OAAP;AAKA,KANM,CADD;AAQNc,IAAAA,QAAQ,EAAE;AARJ,GAAP;AAUA","sourcesContent":["import { useRouter } from 'next/router';\nimport ErrorPage from 'next/error'; \nimport { getPostBySlug, getAllPosts } from 'lib/api';\nimport markdownToHtml from 'lib/markdownToHtml';\n\nexport default function Post({ className, post, preview }) {\n\tconst router = useRouter();\n\tif (!router.isFallback && !post?.slug) {\n\t\treturn <ErrorPage statusCode={404} />\n\t}\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t{router.isFallback ? (\n\t\t\t\t<h1>Loading...</h1>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>{post.title}</h1>\n\t\t\t\t\t<p>Author: {post.author.name}</p>\n\t\t\t\t\t<p>Date: {post.date}</p>\n\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: post.content }} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport async function getStaticProps({ params }) {\n\tconst post = getPostBySlug(params.slug, [\n\t\t'title',\n\t\t'date',\n\t\t'slug',\n\t\t'author',\n\t\t'content',\n\t\t'ogImage',\n\t\t'coverImage'\n\t])\n\n\tconst content = await markdownToHtml(post.content || '');\n\n\treturn {\n\t\tprops: {\n\t\t\tpost: {\n\t\t\t\t...post,\n\t\t\t\tcontent,\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport async function getStaticPaths() {\n\tconst posts = getAllPosts(['slug'])\n\n\treturn {\n\t\tpaths: posts.map(post => {\n\t\t\treturn {\n\t\t\t\tparams: {\n\t\t\t\t\tslug: post.slug\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tfallback: false\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}